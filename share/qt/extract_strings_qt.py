#!/usr/bin/python
'''
Extract _("...") strings for translation and convert to Qt4 stringdefs so that
they can be picked up by Qt linguist.
'''
from subprocess import Popen, PIPE
import glob
import operator
<<<<<<< HEAD
=======
import os
>>>>>>> 20c2a7ecbb53d034a01305c8e63c0ee327bd9917

OUT_CPP="src/qt/bitcoinstrings.cpp"
EMPTY=['""']

def parse_po(text):
    """
    Parse 'po' format produced by xgettext.
    Return a list of (msgid,msgstr) tuples.
    """
    messages = []
    msgid = []
    msgstr = []
    in_msgid = False
    in_msgstr = False

    for line in text.split('\n'):
        line = line.rstrip('\r')
        if line.startswith('msgid '):
            if in_msgstr:
                messages.append((msgid, msgstr))
                in_msgstr = False
            # message start
            in_msgid = True
            
            msgid = [line[6:]]
        elif line.startswith('msgstr '):
            in_msgid = False
            in_msgstr = True
            msgstr = [line[7:]]
        elif line.startswith('"'):
            if in_msgid:
                msgid.append(line)
            if in_msgstr:
                msgstr.append(line)

    if in_msgstr:
        messages.append((msgid, msgstr))

    return messages

files = glob.glob('src/*.cpp') + glob.glob('src/*.h') 

# xgettext -n --keyword=_ $FILES
<<<<<<< HEAD
child = Popen(['xgettext','--output=-','-n','--keyword=_'] + files, stdout=PIPE)
=======
XGETTEXT=os.getenv('XGETTEXT', 'xgettext')
child = Popen([XGETTEXT,'--output=-','-n','--keyword=_'] + files, stdout=PIPE)
>>>>>>> 20c2a7ecbb53d034a01305c8e63c0ee327bd9917
(out, err) = child.communicate()

messages = parse_po(out) 

f = open(OUT_CPP, 'w')
<<<<<<< HEAD
f.write("""#include <QtGlobal>
=======
f.write("""

#include <QtGlobal>

>>>>>>> 20c2a7ecbb53d034a01305c8e63c0ee327bd9917
// Automatically generated by extract_strings.py
#ifdef __GNUC__
#define UNUSED __attribute__((unused))
#else
#define UNUSED
#endif
""")
f.write('static const char UNUSED *bitcoin_strings[] = {\n')
messages.sort(key=operator.itemgetter(0))
for (msgid, msgstr) in messages:
    if msgid != EMPTY:
        f.write('QT_TRANSLATE_NOOP("bitcoin-core", %s),\n' % ('\n'.join(msgid)))
<<<<<<< HEAD
f.write('};')
=======
f.write('};\n')
>>>>>>> 20c2a7ecbb53d034a01305c8e63c0ee327bd9917
f.close()
